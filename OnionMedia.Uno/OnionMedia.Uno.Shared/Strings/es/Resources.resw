<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Shell_Media.Content" xml:space="preserve">
    <value>Convertidor</value>
  </data>
  <data name="Shell_YouTubeDownloader.Content" xml:space="preserve">
    <value>Descargador</value>
  </data>
  <data name="Shell_Playlists.Content" xml:space="preserve">
    <value>Playlists</value>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>Personalización</value>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>Tema</value>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Por defecto</value>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>Acerca de esta aplicación</value>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>OnionMedia es un convertidor y descargador gratuito de archivos de vídeo y audio que funciona con ffmpeg e yt-dlp. Es compatible con un gran número de formatos y códecs y está disponible en GitHub y en la Microsoft Store.</value>
  </data>
  <data name="SettingsPage_PrivacyTermsLink.Content" xml:space="preserve">
    <value>Declaración de privacidad</value>
  </data>
  <data name="SettingsPage_PrivacyTermsLink.NavigateUri" xml:space="preserve">
    <value>https://github.com/onionware-github/OnionMedia/blob/main/Privacy.md</value>
    <comment>Here is your Privacy Statement url for SettingsPage</comment>
  </data>
  <data name="nextBtn" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="searchBtn" xml:space="preserve">
    <value>Buscar vídeos</value>
  </data>
  <data name="openFolder" xml:space="preserve">
    <value>Abrir carpeta</value>
  </data>
  <data name="playFile" xml:space="preserve">
    <value>Reproducir archivo</value>
  </data>
  <data name="downloadFinished" xml:space="preserve">
    <value>Descarga completada.</value>
  </data>
  <data name="videosDownloaded" xml:space="preserve">
    <value>vídeos descargados.</value>
  </data>
  <data name="from.Text" xml:space="preserve">
    <value>De:</value>
  </data>
  <data name="hours.PlaceholderText" xml:space="preserve">
    <value>Horas</value>
  </data>
  <data name="minutes.PlaceholderText" xml:space="preserve">
    <value>Actas</value>
  </data>
  <data name="seconds.PlaceholderText" xml:space="preserve">
    <value>Segundos</value>
  </data>
  <data name="to.Text" xml:space="preserve">
    <value>Para:</value>
  </data>
  <data name="unnamed" xml:space="preserve">
    <value>Sin nombre</value>
  </data>
  <data name="newPreset" xml:space="preserve">
    <value>Nueva preselección</value>
  </data>
  <data name="source" xml:space="preserve">
    <value>Fuente</value>
  </data>
  <data name="custom" xml:space="preserve">
    <value>Personalizado</value>
  </data>
  <data name="changesErrorMsg" xml:space="preserve">
    <value>No se han podido aplicar los cambios.</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Se ha producido un error.</value>
  </data>
  <data name="fileNotFound" xml:space="preserve">
    <value>Archivo no encontrado.</value>
  </data>
  <data name="fileNotFoundText" xml:space="preserve">
    <value>El archivo no fue encontrado y será eliminado de la lista.</value>
  </data>
  <data name="tagerrormsg" xml:space="preserve">
    <value>Se ha producido un error al guardar las nuevas tags.</value>
  </data>
  <data name="conversionDone" xml:space="preserve">
    <value>Conversión realizada.</value>
  </data>
  <data name="filesConverted" xml:space="preserve">
    <value>{0} archivos fueron convertidos.</value>
  </data>
  <data name="livestreamDlgContent" xml:space="preserve">
    <value>Por favor, inténtalo de nuevo después de que la transmisión en vivo haya terminado.</value>
  </data>
  <data name="livestreamDlgTitle" xml:space="preserve">
    <value>Esto es una transmisión en directo.</value>
  </data>
  <data name="converted" xml:space="preserve">
    <value>Convertido</value>
  </data>
  <data name="downloaded" xml:space="preserve">
    <value>Descargado</value>
  </data>
  <data name="removeAll.Text" xml:space="preserve">
    <value>Eliminar todo</value>
  </data>
  <data name="cancel.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="licenseTitle" xml:space="preserve">
    <value>Licencia de OnionMedia</value>
  </data>
  <data name="specialThanks" xml:space="preserve">
    <value>Un agradecimiento especial a:</value>
  </data>
  <data name="specialThanksText" xml:space="preserve">
    <value>Marvin Miltkau (Conceptos de diseño, Iconos)

BobaFett012345 (Muchas pruebas e informes de errores)
Onionware | Lorenz Otto (Muchas pruebas e informes de errores)

pukkandan (desarrollo y apoyo a yt-dlp)</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>OnionMedia es un convertidor y descargador gratuito de archivos de vídeo y audio. Es compatible con un gran número de formatos y códecs y está disponible en GitHub y en la Microsoft Store.</value>
  </data>
  <data name="askForPlaylistDownloadContent" xml:space="preserve">
    <value>Has introducido una URL de una lista de reproducción. ¿Quieres añadir sólo el vídeo o toda la lista de reproducción?</value>
  </data>
  <data name="askForPlaylistDownloadTitle" xml:space="preserve">
    <value>¿Descargar la lista de reproducción?</value>
  </data>
  <data name="playlist" xml:space="preserve">
    <value>Lista de reproducción</value>
  </data>
  <data name="video" xml:space="preserve">
    <value>Vídeo</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>OnionMedia.Uno</value>
  </data>
</root>