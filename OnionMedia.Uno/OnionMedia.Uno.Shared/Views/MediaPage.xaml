<Page
    x:Class="OnionMedia.Uno.Views.MediaPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OnionMedia.Uno.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="using:OnionMedia.Uno.UserControls"
    xmlns:ctc="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:m="using:OnionMedia.Core.Models"
    xmlns:muxc="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <ScrollViewer x:Name="mainScrollViewer" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled">
        <!-- Über Visual States werden verschiedene Werte für verschiedene Szenarien gesetzt.
             In diesem Fall wird die Positionierung der Elemente auf verschiedene Größen angepasst -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="mediaPageVisualGroup">

                <VisualState x:Name="normalUnwrappedWindow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="750"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileInfo.Visibility" Value="Visible"/>
                        <Setter Target="alternativeButtons.Visibility" Value="Collapsed"/>
                        <Setter Target="btnsForSmallView.Visibility" Value="Collapsed"/>
                        <Setter Target="btnsForWideView.Visibility" Value="Visible"/>

                        <Setter Target="fileListPanel.(Grid.RowSpan)" Value="2"/>
                        <Setter Target="fileListPanel.(Grid.ColumnSpan)" Value="1"/>

                        <Setter Target="optionsPanel.(Grid.Row)" Value="0"/>
                        <Setter Target="optionsPanel.(Grid.RowSpan)" Value="2"/>
                        <Setter Target="optionsPanel.(Grid.Column)" Value="1"/>
                        <Setter Target="optionsPanel.(Grid.ColumnSpan)" Value="1"/>

                        <Setter Target="addFilesOnLeftViewBox.(Grid.Row)" Value="0"/>
                        <Setter Target="addFilesOnLeftViewBox.(Grid.RowSpan)" Value="2"/>
                        <Setter Target="addFilesOnLeftViewBox.(Grid.Column)" Value="1"/>
                        <Setter Target="addFilesOnLeftViewBox.(Grid.ColumnSpan)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="smallWrapWindow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileInfo.Visibility" Value="Collapsed"/>
                        <Setter Target="alternativeButtons.Visibility" Value="Visible"/>
                        <Setter Target="btnsForSmallView.Visibility" Value="Visible"/>
                        <Setter Target="btnsForWideView.Visibility" Value="Collapsed"/>

                        <Setter Target="fileListPanel.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="fileListPanel.(Grid.ColumnSpan)" Value="3"/>

                        <Setter Target="optionsPanel.(Grid.Row)" Value="1"/>
                        <Setter Target="optionsPanel.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="optionsPanel.(Grid.Column)" Value="0"/>
                        <Setter Target="optionsPanel.(Grid.ColumnSpan)" Value="3"/>

                        <Setter Target="addFilesOnLeftViewBox.(Grid.Row)" Value="1"/>
                        <Setter Target="addFilesOnLeftViewBox.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="addFilesOnLeftViewBox.(Grid.Column)" Value="0"/>
                        <Setter Target="addFilesOnLeftViewBox.(Grid.ColumnSpan)" Value="3"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="ContentArea">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <!-- Central main area -->
            <Grid x:Name="centralMainPanel" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition MaxWidth="275"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Viewbox x:Name="addFilesOnLeftViewBox" Margin="30" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{x:Bind ViewModel.FilesAreEmpty}">
                    <TextBlock x:Uid="/MediaPage/addFilesOnLeft" TextWrapping="WrapWholeWords"/>
                </Viewbox>
                <!-- Contains the filelist -->
                <ctc:DockPanel x:Name="fileListPanel" Margin="10">
                    <!-- Show these buttons, when the window with is small -->
                    <StackPanel x:Name="btnsForSmallView" ctc:DockPanel.Dock="Bottom" Orientation="Horizontal" Margin="1,5" Spacing="5">
                        <Button Command="{x:Bind ViewModel.AddFileCommand}"
                                IsEnabled="{x:Bind ViewModel.AddingFiles, Converter={StaticResource InverseBoolConverter}}"
                                Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                            <Grid>
                                <muxc:ProgressRing IsActive="{x:Bind ViewModel.AddingFiles}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <SymbolIcon Symbol="Add"/>
                                    <TextBlock x:Uid="/MediaPage/addBtn"/>
                                </StackPanel>
                            </Grid>
                        </Button>
                        <SplitButton Command="{x:Bind ViewModel.RemoveFileCommand}"
                                     CommandParameter="{x:Bind mediaList.SelectedItem}"
                                     VerticalAlignment="Stretch">
                            <StackPanel>
                                <SymbolIcon Symbol="Remove"/>
                                <TextBlock x:Uid="/MediaPage/removeBtn"/>
                            </StackPanel>
                            <SplitButton.Flyout>
                                <Flyout x:Name="smallRemoveBtnFlyout" Placement="Bottom">
                                    <Button Margin="-10" Click="SmallRemoveAll_Clicked" Command="{x:Bind ViewModel.RemoveAllCommand}" IsEnabled="{x:Bind ViewModel.FilesAreEmpty, Converter={StaticResource InverseBoolConverter}}">
                                        <StackPanel Orientation="Horizontal" Spacing="5">
                                            <SymbolIcon Symbol="Cancel"/>
                                            <TextBlock x:Uid="removeAll"/>
                                        </StackPanel>
                                    </Button>
                                </Flyout>
                            </SplitButton.Flyout>
                        </SplitButton>
                    </StackPanel>

                    <ListView Name="mediaList"
                              ctc:DockPanel.Dock="Bottom"
                              ItemsSource="{x:Bind ViewModel.Files}"
                              SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=TwoWay}"
                              AllowDrop="True"
                              Drop="mediaList_Drop"
                              DragOver="mediaList_DragOver"
                              CanReorderItems="True"
                              ReorderMode="Enabled"
                              BorderBrush="SlateGray"
                              BorderThickness="3"
                              CornerRadius="9"
                              MinHeight="50">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="m:MediaItemModel">
                                <Grid ColumnSpacing="5" Padding="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>

                                    <SymbolIcon Symbol="Video" Visibility="{x:Bind AudioOnly, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='true', Mode=OneTime}"/>
                                    <SymbolIcon Symbol="Audio" Visibility="{x:Bind AudioOnly, Mode=OneTime}"/>
                                    <TextBlock Grid.Column="1" Text="{x:Bind Title}" TextTrimming="CharacterEllipsis" MaxLines="2" VerticalAlignment="Center" TextWrapping="WrapWholeWords" Margin="5,0"/>

                                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                                        <ToggleButton Margin="7,5"
                                                      VerticalAlignment="Center"
                                                      Command="{x:Bind EditSpecificConversionOptionsCommand}"
                                                      IsChecked="{x:Bind UseCustomOptions}" Click="ToggleButton_Click"
                                                      Visibility="{x:Bind ConversionState, Converter={StaticResource FFmpegConversionStateToVisibilityConverter}, ConverterParameter='!Converting'}">
                                            <SymbolIcon Symbol="Setting"/>
                                        </ToggleButton>
                                        <muxc:ProgressRing Margin="5" Width="40" Height="40" Value="{x:Bind ConversionProgress}" IsIndeterminate="{x:Bind UnknownConversionProgress}" Visibility="{x:Bind ConversionState, Converter={StaticResource FFmpegConversionStateToVisibilityConverter}, ConverterParameter='Converting'}"/>
                                        <muxc:ProgressRing Margin="5" Width="40" Height="40" IsActive="True" Visibility="{x:Bind ConversionState, Converter={StaticResource FFmpegConversionStateToVisibilityConverter}, ConverterParameter='Moving'}"/>
                                        <SymbolIcon Symbol="Accept" Visibility="{x:Bind ConversionState, Converter={StaticResource FFmpegConversionStateToVisibilityConverter}, ConverterParameter='Done'}"/>
                                        <SymbolIcon Symbol="Cancel" Visibility="{x:Bind ConversionState, Converter={StaticResource FFmpegConversionStateToVisibilityConverter}, ConverterParameter='Failed'}"/>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ctc:DockPanel>


                <!-- Fileoptions -->
                <ScrollViewer x:Name="optionsPanel" Margin="15,15,0,0" VerticalScrollBarVisibility="Auto" BorderBrush="Red">
                    <Grid RowSpacing="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <ContentControl IsEnabled="{x:Bind ViewModel.StartConversionCommand.IsRunning, Converter={StaticResource InverseBoolConverter}}" Visibility="{x:Bind ViewModel.ItemSelected}">
                            <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="10" VerticalSpacing="10">

                                <ComboBox x:Name="conversionPresets" x:Uid="/MediaPage/selectPreset" Width="210" ItemsSource="{x:Bind ViewModel.ConversionPresets}" SelectedItem="{x:Bind ViewModel.SelectedConversionPreset, Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate x:DataType="m:ConversionPreset">
                                            <TextBlock Text="{x:Bind Name, Mode=OneTime}" MaxLines="2" TextTrimming="CharacterEllipsis" TextWrapping="Wrap"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="5" VerticalSpacing="5" VerticalAlignment="Bottom">
                                    <Button Command="{x:Bind ViewModel.AddConversionPresetCommand}">
                                        <SymbolIcon Symbol="Add"/>
                                    </Button>
                                    <Button Command="{x:Bind ViewModel.EditConversionPresetCommand}"
                                            CommandParameter="{x:Bind conversionPresets.SelectedItem}">
                                        <SymbolIcon Symbol="Edit"/>
                                    </Button>
                                    <Button Command="{x:Bind ViewModel.DeleteConversionPresetCommand}"
                                            CommandParameter="{x:Bind conversionPresets.SelectedItem}">
                                        <SymbolIcon Symbol="Delete"/>
                                    </Button>
                                </ctc:WrapPanel>
                                <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="15" VerticalSpacing="10" Visibility="{x:Bind ViewModel.IsDefaultPresetSelected}">
                                    <ComboBox x:Uid="/MediaPage/outputFormat" VerticalAlignment="Center" SelectedIndex="94" ItemsSource="{x:Bind FFmpegCodecs.ContainerFormats, Mode=OneTime}" SelectedItem="{x:Bind CustomConversionPreset.Format, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate x:DataType="m:FFmpegContainerFormat">
                                                <TextBlock Text="{x:Bind Name, Mode=OneTime}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="5" VerticalSpacing="5" VerticalAlignment="Bottom">
                                        <CheckBox x:Name="useVideo" x:Uid="/MediaPage/videocodec" IsChecked="{x:Bind CustomConversionPreset.VideoAvailable, Mode=TwoWay}"/>
                                        <ComboBox ItemsSource="{x:Bind FFmpegCodecs.Videocodecs, Mode=OneTime}" SelectedItem="{x:Bind CustomConversionPreset.VideoCodec, Mode=TwoWay}" Visibility="{x:Bind useVideo.IsChecked}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate x:DataType="m:FFmpegCodec">
                                                    <TextBlock Text="{x:Bind Name, Mode=OneTime}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <ContentControl Visibility="{x:Bind useVideo.IsChecked}">
                                            <ComboBox ItemsSource="{x:Bind CustomConversionPreset.VideoCodec.Encoders}" SelectedItem="{x:Bind CustomConversionPreset.VideoEncoder, Mode=TwoWay}" Visibility="{x:Bind CustomConversionPreset.VideoCodec.MultipleEncoders}"/>
                                        </ContentControl>
                                    </ctc:WrapPanel>
                                    <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="5" VerticalSpacing="5" VerticalAlignment="Bottom">
                                        <CheckBox x:Name="useAudio" x:Uid="/MediaPage/audiocodec" IsChecked="{x:Bind CustomConversionPreset.AudioAvailable, Mode=TwoWay}"/>
                                        <ComboBox ItemsSource="{x:Bind FFmpegCodecs.Audiocodecs, Mode=OneTime}" SelectedItem="{x:Bind CustomConversionPreset.AudioCodec, Mode=TwoWay}" Visibility="{x:Bind useAudio.IsChecked}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate x:DataType="m:FFmpegCodec">
                                                    <TextBlock Text="{x:Bind Name, Mode=OneTime}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <ContentControl Visibility="{x:Bind useAudio.IsChecked}">
                                            <ComboBox ItemsSource="{x:Bind CustomConversionPreset.AudioCodec.Encoders}" SelectedItem="{x:Bind CustomConversionPreset.AudioEncoder, Mode=TwoWay}" Visibility="{x:Bind CustomConversionPreset.AudioCodec.MultipleEncoders}"/>
                                        </ContentControl>
                                    </ctc:WrapPanel>
                                </ctc:WrapPanel>
                                <!-- <CheckBox Content=Merge files" VerticalAlignment="Bottom"/>  <- Coming soon -->
                            </ctc:WrapPanel>
                        </ContentControl>

                        <StackPanel Grid.Row="1">
                            <ContentControl IsEnabled="{x:Bind ViewModel.StartConversionCommand.IsRunning, Converter={StaticResource InverseBoolConverter}}" Visibility="{x:Bind ViewModel.ItemSelected}">
                                <StackPanel Grid.Column="1" Margin="0,10" Spacing="10" Visibility="{x:Bind ViewModel.SelectedItem.VideoStreamAvailable}">
                                    <TextBlock x:Uid="/MediaPage/videoinformation" FontSize="18" FontWeight="SemiBold"/>

                                    <!-- RESOLUTION -->
                                    <TextBlock x:Uid="/MediaPage/resolution"/>
                                    <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="5" VerticalSpacing="5">
                                        <StackPanel Orientation="Horizontal" Spacing="10">
                                            <NumberBox PlaceholderText="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.Width}" Value="{x:Bind ViewModel.SelectedItem.Width, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.VideoEnabled}" MaxWidth="100"/>
                                            <TextBlock Text="X" VerticalAlignment="Center"/>
                                            <NumberBox PlaceholderText="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.Height}" Value="{x:Bind ViewModel.SelectedItem.Height, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.VideoEnabled}" MaxWidth="100"/>
                                        </StackPanel>
                                        <DropDownButton KeyTipPlacementMode="Right" IsEnabled="{x:Bind ViewModel.VideoEnabled}">
                                            <DropDownButton.Content>
                                                <SymbolIcon Symbol="More"/>
                                            </DropDownButton.Content>
                                            <DropDownButton.Flyout>
                                                <Flyout Placement="Right" x:Name="resolutionFlyout">
                                                    <ListView Margin="-10" IsItemClickEnabled="True" SelectionMode="None" ItemClick="Resolutionpreset_ItemClick" ItemsSource="{x:Bind ViewModel.Resolutions}">
                                                        <i:Interaction.Behaviors>
                                                            <core:EventTriggerBehavior EventName="ItemClick">
                                                                <core:InvokeCommandAction Command="{x:Bind ViewModel.SetResolutionCommand}" InputConverter="{StaticResource ItemClickEventArgsToClickedItemConverter}"/>
                                                            </core:EventTriggerBehavior>
                                                        </i:Interaction.Behaviors>
                                                        <ListView.ItemTemplate>
                                                            <DataTemplate x:DataType="m:Resolution">
                                                                <TextBlock Text="{x:Bind FullName, Mode=OneTime}"/>
                                                            </DataTemplate>
                                                        </ListView.ItemTemplate>
                                                    </ListView>
                                                </Flyout>
                                            </DropDownButton.Flyout>
                                        </DropDownButton>
                                    </ctc:WrapPanel>

                                    <!-- FPS -->
                                    <StackPanel Orientation="Horizontal" Spacing="5">
                                        <NumberBox x:Uid="/MediaPage/fps" PlaceholderText="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.FrameRate}" Value="{x:Bind ViewModel.SelectedItem.FPS, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.VideoEnabled}" MaxWidth="150"/>
                                        <DropDownButton KeyTipPlacementMode="Right" VerticalAlignment="Bottom" IsEnabled="{x:Bind ViewModel.VideoEnabled}">
                                            <DropDownButton.Content>
                                                <SymbolIcon Symbol="More"/>
                                            </DropDownButton.Content>
                                            <DropDownButton.Flyout>
                                                <Flyout Placement="Right" x:Name="framerateFlyout">
                                                    <ListView Margin="-10" IsItemClickEnabled="True" SelectionMode="None" ItemClick="Frameratepreset_ItemClick">
                                                        <x:Double>24</x:Double>
                                                        <x:Double>25</x:Double>
                                                        <x:Double>30</x:Double>
                                                        <x:Double>60</x:Double>
                                                        <x:Double>120</x:Double>
                                                        <x:Double>144</x:Double>
                                                        <i:Interaction.Behaviors>
                                                            <core:EventTriggerBehavior EventName="ItemClick">
                                                                <core:InvokeCommandAction Command="{x:Bind ViewModel.SetFramerateCommand}" InputConverter="{StaticResource ItemClickEventArgsToClickedItemConverter}"/>
                                                            </core:EventTriggerBehavior>
                                                        </i:Interaction.Behaviors>
                                                    </ListView>
                                                </Flyout>
                                            </DropDownButton.Flyout>
                                        </DropDownButton>
                                    </StackPanel>

                                    <!-- ASPECT RATIO -->
                                    <TextBlock x:Uid="/MediaPage/aspectRatio"/>
                                    <CheckBox x:Name="keepAspectRatio" x:Uid="/MediaPage/keepAspectRatio" Margin="0,-5" IsChecked="{x:Bind ViewModel.SelectedItem.KeepAspectRatio, Mode=TwoWay, FallbackValue=true, TargetNullValue=true}" IsEnabled="{x:Bind ViewModel.VideoEnabled}"/>
                                    <StackPanel Orientation="Horizontal" Spacing="10" Visibility="{x:Bind (x:Boolean)keepAspectRatio.IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=true}">
                                        <NumberBox PlaceholderText="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.DisplayAspectRatio.Item1}" Value="{x:Bind ViewModel.SelectedItem.AspectRatioWidth, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.VideoEnabled}"/>
                                        <TextBlock Text=":" VerticalAlignment="Center"/>
                                        <NumberBox PlaceholderText="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.DisplayAspectRatio.Item2}" Value="{x:Bind ViewModel.SelectedItem.AspectRatioHeight, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.VideoEnabled}"/>
                                    </StackPanel>
                                </StackPanel>
                            </ContentControl>

                            <!-- SHORT VIDEO -->
                            <TextBlock x:Uid="/MediaPage/shortFile" FontSize="20" Margin="{StaticResource XSmallTopMargin}" Visibility="{x:Bind ViewModel.ItemSelected}"/>
                            <uc:TimeRangeSelector TimeSpanGroup="{x:Bind ViewModel.SelectedItem.VideoTimes}" IsEnabled="{x:Bind ViewModel.ItemSelectedAndIdle}" HorizontalAlignment="Stretch" Margin="{StaticResource SmallTopBottomMargin}" Visibility="{x:Bind ViewModel.ItemSelected}"/>

                            <!-- BITRATES -->
                            <TextBlock x:Uid="/MediaPage/useCustomBitrates" TextWrapping="Wrap" FontWeight="SemiBold" FontSize="18" Margin="0,5" Visibility="{x:Bind ViewModel.ItemSelected}"/>
                            <ContentControl IsEnabled="{x:Bind ViewModel.StartConversionCommand.IsRunning, Converter={StaticResource InverseBoolConverter}}" Visibility="{x:Bind ViewModel.ItemSelected}">
                                <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="15" VerticalSpacing="15">
                                    <StackPanel Orientation="Horizontal" Spacing="3" Visibility="{x:Bind ViewModel.SelectedItem.AudioStreamAvailable}">
                                        <NumberBox x:Uid="/MediaPage/audiobitrate"
                                                   Minimum="0"
                                                   NumberFormatter="{x:Bind BitrateFormatter, Mode=OneTime}"
                                                   Value="{x:Bind ViewModel.SelectedItem.AudioBitrate, Mode=TwoWay, Converter={StaticResource BitToKilobitConverter}}"
                                                   IsEnabled="{x:Bind ViewModel.SelectedConversionPreset.AudioAvailable}"
                                                   Width="125"/>
                                        <TextBlock Text="kbit/s" Margin="{StaticResource LargeTopMargin}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Spacing="3" Visibility="{x:Bind ViewModel.SelectedItem.VideoStreamAvailable}">
                                        <NumberBox x:Uid="/MediaPage/videobitrate"
                                                   Minimum="0"
                                                   NumberFormatter="{x:Bind BitrateFormatter, Mode=OneTime}"
                                                   Value="{x:Bind ViewModel.SelectedItem.VideoBitrate, Mode=TwoWay, Converter={StaticResource BitToKilobitConverter}}"
                                                   IsEnabled="{x:Bind ViewModel.SelectedConversionPreset.VideoAvailable}"
                                                   Width="125"/>
                                        <TextBlock Text="kbit/s" Margin="{StaticResource LargeTopMargin}"/>
                                    </StackPanel>
                                </ctc:WrapPanel>
                            </ContentControl>
                        </StackPanel>
                    </Grid>
                </ScrollViewer>

                <!-- Fileinfo -->
                <Grid x:Name="fileInfo" Grid.Column="2" Grid.RowSpan="2" RowSpacing="5" Margin="0,10,10,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button x:Name="editTagsBtn" x:Uid="/MediaPage/editTagsBtn" HorizontalAlignment="Stretch" Margin="10,0,0,0" Command="{x:Bind ViewModel.EditTagsCommand}" IsEnabled="{x:Bind ViewModel.CanEditTags}" Visibility="{x:Bind ViewModel.ItemSelected}"/>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Visibility="{x:Bind ViewModel.ItemSelected}">
                        <StackPanel Margin="10" Spacing="7">
                            <TextBlock x:Uid="/MediaPage/fileInfo" FontWeight="SemiBold"/>
                            <TextBlock TextTrimming="CharacterEllipsis" MaxLines="3">
                                <Run x:Uid="/MediaPage/fileName"/>
                                <Run Text="{x:Bind GetFilenameWithoutExtension()}"/>
                            </TextBlock>
                            <TextBlock>
                                <Run x:Uid="/MediaPage/fileType"/>
                                <Run Text="{x:Bind ViewModel.SelectedItem.MediaFile.FileInfo.Extension}"/>
                                <Run x:Uid="/MediaPage/file"/>
                            </TextBlock>
                            <TextBlock>
                                <Run x:Uid="/MediaPage/fileSize"/>
                                <Run Text="{x:Bind ViewModel.SelectedItem.MediaFile.FileInfo.Length, Converter={StaticResource FileSizeConverter}}"/>
                            </TextBlock>
                            <TextBlock Visibility="{x:Bind ViewModel.SelectedItem.UnknownConversionProgress}">
                                <Run x:Uid="/MediaPage/fileDuration"/>
                                <Run Text="{x:Bind ViewModel.SelectedItem.VideoTimes.Duration}"/>
                            </TextBlock>
                            <TextBlock Visibility="{x:Bind ViewModel.SelectedItem.AudioStreamAvailable}">
                                <Run x:Uid="/MediaPage/fileAudioCodec"/>
                                <Run Text="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryAudioStream.CodecLongName}"/>
                            </TextBlock>
                            <TextBlock Visibility="{x:Bind ViewModel.SelectedItem.VideoStreamAvailable}">
                                <Run x:Uid="/MediaPage/fileVideoCodec"/>
                                <Run Text="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.CodecLongName}"/>
                            </TextBlock>
                            <TextBlock Visibility="{x:Bind ViewModel.SelectedItem.VideoStreamAvailable}">
                                <Run x:Uid="/MediaPage/fileResolution"/>
                                <Run Text="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.Width}"/>
                                <Run>X</Run>
                                <Run Text="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.Height}"/>
                            </TextBlock>
                            <TextBlock Visibility="{x:Bind ViewModel.SelectedItem.VideoStreamAvailable}">
                                <Run x:Uid="/MediaPage/framesPerSecond"/>
                                <Run Text="{x:Bind ViewModel.SelectedItem.MediaInfo.PrimaryVideoStream.FrameRate}"/>
                            </TextBlock>

                            <StackPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="18"/>
                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                </Style>
                            </StackPanel.Resources>
                        </StackPanel>
                    </ScrollViewer>
                    <TeachingTip Target="{x:Bind editTagsBtn, Mode=OneTime}"
                                 x:Uid="/MediaPage/tagChanges"
                                 IsOpen="{x:Bind ViewModel.TagsEditedFlyoutIsOpen}">
                        <TeachingTip.IconSource>
                            <SymbolIconSource Symbol="Refresh"/>
                        </TeachingTip.IconSource>
                    </TeachingTip>
                </Grid>
            </Grid>

            <!-- Bottom area with ProgressBar -->
            <ctc:DockPanel Grid.Row="2" Padding="10">
                <StackPanel x:Name="btnsForWideView" Orientation="Horizontal">
                    <Button Command="{x:Bind ViewModel.AddFileCommand}"
                            IsEnabled="{x:Bind ViewModel.AddingFiles, Converter={StaticResource InverseBoolConverter}}"
                            Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}"
                            Margin="0,0,5,0">
                        <Grid>
                            <muxc:ProgressRing IsActive="{x:Bind ViewModel.AddingFiles}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <SymbolIcon Symbol="Add"/>
                                <TextBlock x:Uid="/MediaPage/addBtn"/>
                            </StackPanel>
                        </Grid>
                    </Button>
                    <SplitButton Command="{x:Bind ViewModel.RemoveFileCommand}"
                                 CommandParameter="{x:Bind mediaList.SelectedItem}"
                                 Margin="0,0,5,0"
                                 VerticalAlignment="Stretch">
                        <StackPanel>
                            <SymbolIcon Symbol="Remove"/>
                            <TextBlock x:Uid="/MediaPage/removeBtn"/>
                        </StackPanel>
                        <SplitButton.Flyout>
                            <Flyout x:Name="wideRemoveBtnFlyout" Placement="Top">
                                <Button Margin="-10" Click="WideRemoveAll_Clicked" Command="{x:Bind ViewModel.RemoveAllCommand}" IsEnabled="{x:Bind ViewModel.FilesAreEmpty, Converter={StaticResource InverseBoolConverter}}">
                                    <StackPanel Orientation="Horizontal" Spacing="5">
                                        <SymbolIcon Symbol="Cancel"/>
                                        <TextBlock x:Uid="removeAll"/>
                                    </StackPanel>
                                </Button>
                            </Flyout>
                        </SplitButton.Flyout>
                    </SplitButton>
                    <Button Command="{x:Bind ViewModel.CancelAllCommand}"
                            Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning}"
                            Margin="0,0,5,0">
                        <StackPanel>
                            <SymbolIcon Symbol="Cancel"/>
                            <TextBlock x:Uid="cancel"/>
                        </StackPanel>
                    </Button>
                    <Button Command="{x:Bind ViewModel.StartConversionCommand}"
                            IsEnabled="{x:Bind ViewModel.CanExecuteConversion}"
                            Style="{ThemeResource AccentButtonStyle}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Margin="0,0,5,0">
                        <StackPanel>
                            <SymbolIcon Symbol="Play" Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}"/>
                            <ProgressRing x:Name="btnProgressRing" Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning}"/>
                            <TextBlock x:Uid="/MediaPage/convertBtn" Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <StackPanel x:Name="alternativeButtons" Spacing="5">
                    <Button Style="{ThemeResource AccentButtonStyle}"
                            HorizontalAlignment="Stretch"
                            Command="{x:Bind ViewModel.StartConversionCommand}"
                            IsEnabled="{x:Bind ViewModel.CanExecuteConversion}">
                        <Grid>
                            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        Spacing="3"
                                        Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                                <TextBlock x:Uid="/MediaPage/convertBtn"/>
                                <SymbolIcon Symbol="Play"/>
                            </StackPanel>
                            <ProgressRing IsActive="{x:Bind ViewModel.StartConversionCommand.IsRunning}" Width="20" Height="20"/>
                        </Grid>
                    </Button>
                    <Button Command="{x:Bind ViewModel.CancelAllCommand}"
                            x:Uid="/MediaPage/cancelText"
                            HorizontalAlignment="Stretch"
                            IsEnabled="{x:Bind ViewModel.StartConversionCommand.IsRunning}"/>
                </StackPanel>

                <TextBlock Margin="5" x:Uid="/MediaPage/progress" VerticalAlignment="Center" Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning}"/>
                <ProgressBar Value="{x:Bind ViewModel.Progress}" VerticalAlignment="Center" Visibility="{x:Bind ViewModel.StartConversionCommand.IsRunning}"/>
            </ctc:DockPanel>
        </Grid>
    </ScrollViewer>
</Page>
